[
    {
        "id": "5e0bc0e9bab3ec90",
        "type": "tab",
        "label": "world map",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d4aef6c4530e32a5",
        "type": "tab",
        "label": "charge request",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9bbcb18b5b14f0c7",
        "type": "tab",
        "label": "Min time",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "08ac8e87d86fc868",
        "type": "tab",
        "label": "Price",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dcbd24beb8c394c1",
        "type": "tab",
        "label": "responder",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e50dde15ea72613e",
        "type": "tab",
        "label": "recieving request",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "aede0575.1a92a",
        "type": "tab",
        "label": "motification UI",
        "disabled": false,
        "info": ""
    },
    {
        "id": "61a63825a1bb6877",
        "type": "tab",
        "label": "wallet",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ad15bb11167eaadc",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d293de12a7c290a8",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "50a6b56a00666805",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "mouse",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 0,
                "gy": 0,
                "cx": 6,
                "cy": 6,
                "px": 11,
                "py": 11
            }
        }
    },
    {
        "id": "fc6be7a5a896c201",
        "type": "ui_tab",
        "name": "Map for stations",
        "icon": "fa-map",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "626f7c7b3bb772cd",
        "type": "ui_group",
        "name": "gps",
        "tab": "fc6be7a5a896c201",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "de8b5cc1998f3b6e",
        "type": "ui_tab",
        "name": "make-request",
        "icon": "fa-refresh",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1fa043305c7b3931",
        "type": "ui_group",
        "name": "make request",
        "tab": "de8b5cc1998f3b6e",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a8c2f38e67f15525",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "69b99350af24b186",
        "type": "ui_tab",
        "name": "responders",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1b47bda6910d4617",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "69b99350af24b186",
        "order": 1,
        "disp": true,
        "width": 30
    },
    {
        "id": "7de0375731eea05f",
        "type": "ui_spacer",
        "z": "5e0bc0e9bab3ec90",
        "name": "spacer",
        "group": "626f7c7b3bb772cd",
        "order": 1,
        "width": 12,
        "height": 1
    },
    {
        "id": "1fb0891180671571",
        "type": "ui_spacer",
        "z": "5e0bc0e9bab3ec90",
        "name": "spacer",
        "group": "626f7c7b3bb772cd",
        "order": 3,
        "width": 12,
        "height": 1
    },
    {
        "id": "76522361a734b37f",
        "type": "ui_spacer",
        "z": "5e0bc0e9bab3ec90",
        "name": "spacer",
        "group": "626f7c7b3bb772cd",
        "order": 4,
        "width": 12,
        "height": 1
    },
    {
        "id": "8a9b51a8d5622ca1",
        "type": "ui_spacer",
        "z": "5e0bc0e9bab3ec90",
        "name": "spacer",
        "group": "626f7c7b3bb772cd",
        "order": 5,
        "width": 12,
        "height": 1
    },
    {
        "id": "e17c4033b9c92024",
        "type": "ui_tab",
        "name": "request",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "881fd84fecadb2a3",
        "type": "ui_group",
        "name": "recieve request",
        "tab": "e17c4033b9c92024",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2625aaac8c7fa956",
        "type": "ui_group",
        "name": "seller_location",
        "tab": "de8b5cc1998f3b6e",
        "order": 2,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e01b6f.a9d07c9",
        "type": "ui_tab",
        "name": "wallet",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "602a7c26d172717a",
        "type": "ui_group",
        "name": "Map",
        "tab": "e17c4033b9c92024",
        "order": 2,
        "disp": true,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6da53b28cefdaed3",
        "type": "ui_group",
        "name": "wallet",
        "tab": "e01b6f.a9d07c9",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1b27cbf480b7ef1e",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 1,
        "width": 30,
        "height": 1
    },
    {
        "id": "e83a5ae1211daf49",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 2,
        "width": 15,
        "height": 1
    },
    {
        "id": "5abd43adb9ca8974",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "a1db7f10e05a7cb5",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 6,
        "width": 23,
        "height": 1
    },
    {
        "id": "3e0c43bc05e1ef6d",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 7,
        "width": 10,
        "height": 1
    },
    {
        "id": "0671791f5ccb1efa",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "317848dd5d01328f",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 10,
        "width": 30,
        "height": 1
    },
    {
        "id": "669a141ac42366fc",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 11,
        "width": 15,
        "height": 1
    },
    {
        "id": "eb5fc2251a568e2d",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 13,
        "width": 7,
        "height": 1
    },
    {
        "id": "47cfe696bac0864e",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 14,
        "width": 30,
        "height": 1
    },
    {
        "id": "eb0c7d7d6d8c336a",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 15,
        "width": 15,
        "height": 1
    },
    {
        "id": "226506dc6434c6f1",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 17,
        "width": 7,
        "height": 1
    },
    {
        "id": "09e3f25c14fc9dd3",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 18,
        "width": 30,
        "height": 1
    },
    {
        "id": "ccf8315b7919d361",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 19,
        "width": 10,
        "height": 1
    },
    {
        "id": "f57dbb0ee331b6a7",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 21,
        "width": 2,
        "height": 1
    },
    {
        "id": "5e723319c6de3b80",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 22,
        "width": 30,
        "height": 1
    },
    {
        "id": "2100bb0c3187b9a7",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 23,
        "width": 15,
        "height": 1
    },
    {
        "id": "3e8be4207025c88c",
        "type": "ui_spacer",
        "z": "61a63825a1bb6877",
        "name": "spacer",
        "group": "6da53b28cefdaed3",
        "order": 25,
        "width": 7,
        "height": 1
    },
    {
        "id": "594a08462165f36a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "28102e4af58d5e40",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 1,
        "width": 24,
        "height": 1
    },
    {
        "id": "43d22ac38c122dcf",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "964eb7595f3c9da9",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 5,
        "width": 11,
        "height": 1
    },
    {
        "id": "be92a015a65432f9",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 7,
        "width": 8,
        "height": 1
    },
    {
        "id": "f544753ca78dfee7",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 8,
        "width": 11,
        "height": 1
    },
    {
        "id": "c8406e886cc8b60a",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 9,
        "width": 8,
        "height": 1
    },
    {
        "id": "e26791627ebc64ec",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 10,
        "width": 30,
        "height": 1
    },
    {
        "id": "c09fa9936774b0f4",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 11,
        "width": 30,
        "height": 1
    },
    {
        "id": "dba11259f138fbed",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 13,
        "width": 7,
        "height": 1
    },
    {
        "id": "ade7fd496fd5fa22",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "1c8c68862eb2be91",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 17,
        "width": 4,
        "height": 1
    },
    {
        "id": "592190a3a13306c7",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 19,
        "width": 7,
        "height": 1
    },
    {
        "id": "569b4a2e5959c42c",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 21,
        "width": 2,
        "height": 1
    },
    {
        "id": "020afe65ac40b65d",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 23,
        "width": 4,
        "height": 1
    },
    {
        "id": "476ce85a615ca896",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 25,
        "width": 7,
        "height": 1
    },
    {
        "id": "3ef3559d7e6e1c84",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 27,
        "width": 2,
        "height": 1
    },
    {
        "id": "36e934b9cb28f1f7",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 29,
        "width": 4,
        "height": 1
    },
    {
        "id": "6d372e402f4b8fe1",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 31,
        "width": 24,
        "height": 1
    },
    {
        "id": "bcf9e5aafc0d55fd",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 33,
        "width": 24,
        "height": 1
    },
    {
        "id": "105158ad0b6b3033",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 34,
        "width": 9,
        "height": 1
    },
    {
        "id": "ea24c30b610db8ae",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 36,
        "width": 2,
        "height": 1
    },
    {
        "id": "c78cf2bbd52d1496",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 38,
        "width": 3,
        "height": 1
    },
    {
        "id": "bf63cbda2b536429",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 39,
        "width": 2,
        "height": 1
    },
    {
        "id": "af2f0e3f1e47a001",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 40,
        "width": 9,
        "height": 1
    },
    {
        "id": "5664fb234e69d780",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "1fa043305c7b3931",
        "order": 42,
        "width": 8,
        "height": 1
    },
    {
        "id": "8c16c0c2934a38d9",
        "type": "ui_spacer",
        "z": "9bbcb18b5b14f0c7",
        "name": "spacer",
        "group": "2625aaac8c7fa956",
        "order": 1,
        "width": 30,
        "height": 1
    },
    {
        "id": "a8ea168dd680e870",
        "type": "ui_worldmap",
        "z": "5e0bc0e9bab3ec90",
        "group": "626f7c7b3bb772cd",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "lat": "31.045969",
        "lon": "31.377189",
        "zoom": "18",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "hide",
        "layers": "hide",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "showruler": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriDG,UKOS",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 720,
        "y": 90,
        "wires": []
    },
    {
        "id": "c134bcea1f72bf03",
        "type": "template",
        "z": "5e0bc0e9bab3ec90",
        "name": "lat",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "31.130474\n   ",
        "output": "yaml",
        "x": 370,
        "y": 200,
        "wires": [
            [
                "ae5069de5cf91f53"
            ]
        ]
    },
    {
        "id": "2172bb5209f184dc",
        "type": "template",
        "z": "5e0bc0e9bab3ec90",
        "name": "lon",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "31.645777",
        "output": "yaml",
        "x": 360,
        "y": 240,
        "wires": [
            [
                "59cde1ef0deafb3e"
            ]
        ]
    },
    {
        "id": "40a3f119b1c21bc9",
        "type": "function",
        "z": "5e0bc0e9bab3ec90",
        "name": "function 1",
        "func": "msg.payload = {\n    \"name\": \"hhh\",\n    \"lat\": global.get(\"lat\"),\n    \"lon\": global.get(\"lon\"),\n    \"icon\": \"car\" ,\n    \"iconColor\": \"red\"\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "ae5069de5cf91f53",
        "type": "function",
        "z": "5e0bc0e9bab3ec90",
        "name": "my lat",
        "func": "var lat = msg.payload\nglobal.set(\"lat\", lat);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 200,
        "wires": [
            [
                "40a3f119b1c21bc9"
            ]
        ]
    },
    {
        "id": "59cde1ef0deafb3e",
        "type": "function",
        "z": "5e0bc0e9bab3ec90",
        "name": "my lon",
        "func": "var lon = msg.payload\nglobal.set(\"lon\", lon);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 240,
        "wires": [
            [
                "40a3f119b1c21bc9"
            ]
        ]
    },
    {
        "id": "e1f286709e17dd16",
        "type": "ui_button",
        "z": "5e0bc0e9bab3ec90",
        "name": "",
        "group": "626f7c7b3bb772cd",
        "order": 2,
        "width": 6,
        "height": 2,
        "passthru": false,
        "label": "show stations",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "448f43d0db244cb1",
                "3f06c44c398cab3f",
                "5f4f74e27a7629a4",
                "e468c0a722e36195"
            ]
        ]
    },
    {
        "id": "448f43d0db244cb1",
        "type": "function",
        "z": "5e0bc0e9bab3ec90",
        "name": "function 24",
        "func": "msg.payload=\n    {\n    \"name\": \"elsayed\",\n    \"lat\": 31.045969,\n    \"lon\": 31.377189,\n                \"icon\":\"car\",\n                \"iconColor\": \"black\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 30,
        "wires": [
            [
                "a8ea168dd680e870"
            ]
        ]
    },
    {
        "id": "3f06c44c398cab3f",
        "type": "function",
        "z": "5e0bc0e9bab3ec90",
        "name": "function 25",
        "func": "msg.payload=\n{\n    \"name\": \"chell out\",\n    \"lat\": 31.046617,\n    \"lon\": 31.375013,\n    \"iconColor\": \"red\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 70,
        "wires": [
            [
                "a8ea168dd680e870"
            ]
        ]
    },
    {
        "id": "5f4f74e27a7629a4",
        "type": "function",
        "z": "5e0bc0e9bab3ec90",
        "name": "function 26",
        "func": "msg.payload=\n{\n    \"name\": \"chell out\",\n    \"lat\": 31.046608,\n    \"lon\": 31.378983,\n    \"iconColor\": \"red\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 110,
        "wires": [
            [
                "a8ea168dd680e870"
            ]
        ]
    },
    {
        "id": "e468c0a722e36195",
        "type": "function",
        "z": "5e0bc0e9bab3ec90",
        "name": "function 27",
        "func": "msg.payload=\n{\n    \"name\": \"hasan\",\n    \"lat\": 31.045252,\n    \"lon\": 31.380099,\n    \"iconColor\": \"blue\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 150,
        "wires": [
            [
                "a8ea168dd680e870"
            ]
        ]
    },
    {
        "id": "18b103a1824c3c4c",
        "type": "inject",
        "z": "5e0bc0e9bab3ec90",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "c134bcea1f72bf03",
                "2172bb5209f184dc",
                "bfe778c485b0fddc",
                "8cd082d34b24282c",
                "cf544c945c35e9c1"
            ]
        ]
    },
    {
        "id": "9ba95b2f16a4e4f0",
        "type": "function",
        "z": "5e0bc0e9bab3ec90",
        "name": "my id",
        "func": "global.set(\"My_ID\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 290,
        "wires": [
            []
        ]
    },
    {
        "id": "bfe778c485b0fddc",
        "type": "template",
        "z": "5e0bc0e9bab3ec90",
        "name": "my id",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "1000148827",
        "output": "yaml",
        "x": 340,
        "y": 290,
        "wires": [
            [
                "9ba95b2f16a4e4f0"
            ]
        ]
    },
    {
        "id": "8cd082d34b24282c",
        "type": "template",
        "z": "5e0bc0e9bab3ec90",
        "name": "battery",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "90",
        "output": "yaml",
        "x": 340,
        "y": 340,
        "wires": [
            [
                "8a039972af6d7440"
            ]
        ]
    },
    {
        "id": "cf544c945c35e9c1",
        "type": "template",
        "z": "5e0bc0e9bab3ec90",
        "name": "speed",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "120",
        "output": "yaml",
        "x": 330,
        "y": 380,
        "wires": [
            [
                "f8d003b8920e5352"
            ]
        ]
    },
    {
        "id": "8a039972af6d7440",
        "type": "function",
        "z": "5e0bc0e9bab3ec90",
        "name": "my battery",
        "func": "global.set(\"my_battery\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "f8d003b8920e5352",
        "type": "function",
        "z": "5e0bc0e9bab3ec90",
        "name": "my speed",
        "func": "global.set(\"my_speed\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "3c2e3698fd41e71c",
        "type": "comment",
        "z": "5e0bc0e9bab3ec90",
        "name": "hassan",
        "info": "id  :\n1000148830  \nlat :\n31.130228\nlon :\n31.647099\n\n",
        "x": 920,
        "y": 200,
        "wires": []
    },
    {
        "id": "5238fcd7dea79974",
        "type": "comment",
        "z": "5e0bc0e9bab3ec90",
        "name": "elsayed",
        "info": "id\nlat\nlon",
        "x": 940,
        "y": 290,
        "wires": []
    },
    {
        "id": "daca01abecee96e2",
        "type": "ui_button",
        "z": "d4aef6c4530e32a5",
        "name": "",
        "group": "1fa043305c7b3931",
        "order": 4,
        "width": 6,
        "height": 2,
        "passthru": false,
        "label": "make request",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "chrging request",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "ee2cb3fced387ac8",
                "00ecc28ef417adad",
                "0fae350cefd3bfe3",
                "81792265beaf6771",
                "bf3044ddcc1b6211",
                "903a4d0c66e1c0f8",
                "eb02fe7e64ce2b68",
                "63b7e894834c1852"
            ]
        ]
    },
    {
        "id": "ee2cb3fced387ac8",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "function 5",
        "func": "msg.payload =\n{\n    \"name\": \"elsayed\",\n    \"lat\": 31.13045,\n    \"lon\": 31.64573,\n    \"iconColor\": \"yellow\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "d9985cf0c63ea0dd",
        "type": "ui_text_input",
        "z": "d4aef6c4530e32a5",
        "name": "",
        "label": "amount",
        "tooltip": "",
        "group": "1fa043305c7b3931",
        "order": 30,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 90,
        "y": 620,
        "wires": [
            [
                "5d5bbdc93dad1fab",
                "1c598502f9640271"
            ]
        ]
    },
    {
        "id": "2d518c83c1185fa1",
        "type": "ui_text_input",
        "z": "d4aef6c4530e32a5",
        "name": "",
        "label": "price",
        "tooltip": "",
        "group": "1fa043305c7b3931",
        "order": 32,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 100,
        "y": 510,
        "wires": [
            [
                "22b605cfc4c135b6"
            ]
        ]
    },
    {
        "id": "b66dfd490ab3c7a9",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "sending a request",
        "func": "\nmsg.payload={\n    \"ID\": global.get(\"My_ID\"),\n    \"lat\" : global.get(\"lat\"),\n    \"lon\" : global.get(\"lon\"),\n    \"amount\":flow.get(\"amount\"),\n    \"price\":flow.get(\"price\")\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 290,
        "wires": [
            [
                "024928bad4d1e180",
                "04c9a0306ff9e007"
            ]
        ]
    },
    {
        "id": "024928bad4d1e180",
        "type": "debug",
        "z": "d4aef6c4530e32a5",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 430,
        "wires": []
    },
    {
        "id": "5d5bbdc93dad1fab",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "amount variable",
        "func": "msg.payload = flow.set(\"amount\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 570,
        "wires": [
            []
        ]
    },
    {
        "id": "22b605cfc4c135b6",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "price variable",
        "func": "\nmsg.payload = flow.set(\"price\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 510,
        "wires": [
            []
        ]
    },
    {
        "id": "e280bf8bf9b476bf",
        "type": "inject",
        "z": "d4aef6c4530e32a5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 290,
        "wires": [
            [
                "b66dfd490ab3c7a9"
            ]
        ]
    },
    {
        "id": "c3ed0161f4be5d3e",
        "type": "ui_button",
        "z": "d4aef6c4530e32a5",
        "name": "",
        "group": "1fa043305c7b3931",
        "order": 37,
        "width": 6,
        "height": 2,
        "passthru": false,
        "label": "send request",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 210,
        "wires": [
            [
                "b66dfd490ab3c7a9"
            ]
        ]
    },
    {
        "id": "00ecc28ef417adad",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "lat",
        "func": "msg.payload=global.get(\"lat\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 100,
        "y": 350,
        "wires": [
            [
                "64b21c2caace04bd"
            ]
        ]
    },
    {
        "id": "0fae350cefd3bfe3",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "lon",
        "func": "msg.payload=global.get(\"lon\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 100,
        "y": 400,
        "wires": [
            [
                "9f8dafd0b7c431af"
            ]
        ]
    },
    {
        "id": "9f8dafd0b7c431af",
        "type": "ui_text",
        "z": "d4aef6c4530e32a5",
        "group": "1fa043305c7b3931",
        "order": 24,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "lon",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 260,
        "y": 400,
        "wires": []
    },
    {
        "id": "64b21c2caace04bd",
        "type": "ui_text",
        "z": "d4aef6c4530e32a5",
        "group": "1fa043305c7b3931",
        "order": 18,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "lat",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 260,
        "y": 350,
        "wires": []
    },
    {
        "id": "04c9a0306ff9e007",
        "type": "mqtt out",
        "z": "d4aef6c4530e32a5",
        "name": "",
        "topic": "/send_request",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "594a08462165f36a",
        "x": 520,
        "y": 330,
        "wires": []
    },
    {
        "id": "0b4cadfc40a6862c",
        "type": "mqtt in",
        "z": "d4aef6c4530e32a5",
        "name": "",
        "topic": "/accept_request",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "594a08462165f36a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 540,
        "y": 850,
        "wires": [
            [
                "c5cbdd7290b72a89",
                "447f06a9c4b59e1d"
            ]
        ]
    },
    {
        "id": "c5cbdd7290b72a89",
        "type": "debug",
        "z": "d4aef6c4530e32a5",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 720,
        "wires": []
    },
    {
        "id": "60281863981f9894",
        "type": "ui_text",
        "z": "d4aef6c4530e32a5",
        "group": "1fa043305c7b3931",
        "order": 12,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "ID",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 260,
        "y": 450,
        "wires": []
    },
    {
        "id": "81792265beaf6771",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "ID",
        "func": "msg.payload = global.get(\"My_ID\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 90,
        "y": 460,
        "wires": [
            [
                "60281863981f9894"
            ]
        ]
    },
    {
        "id": "b0c9b819f25d0d89",
        "type": "comment",
        "z": "d4aef6c4530e32a5",
        "name": "accept request format",
        "info": "{\n  \"buyer_ID\":1000148827,\n  \"Seller_ID\": 108542,\n  \"lat\": 37.130768,\n  \"lon\": 31.643557,\n  \"speed\":80,\n  \"battery\":90,\n  \"amount\": 120,\n  \"price\": 140\n}",
        "x": 940,
        "y": 60,
        "wires": []
    },
    {
        "id": "fbfbdd20a899031f",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "function 7",
        "func": "let I = global.set(\"seller_ID\",msg.payload.Seller_ID);\nlet lat= global.set(\"seller_lat\", msg.payload.lat);\nlet lon = global.set(\"seller_lon\", msg.payload.lon);\nlet sp = global.set(\"seller_speed\",msg.payload.speed);\nlet batt = global.set(\"seller_battery_per\",msg.payload.battery)\nlet am = global.set(\"amount\",msg.payload.amount );\nlet pr =global.set(\"seller_price\", msg.payload.price);\nlet z= global.get(\"seller_ID\");\nlet x = global.get(\"seller_lat\");\nlet y = global.get(\"seller_lon\");\nlet spe = global.get(\"seller_speed\");\nlet battery = global.get(\"seller_battery_per\");\nlet amm = global.get(\"amount\");\nmsg.payload ={\n    \"seller_ID\" : z ,\n    \"lat\" : x,\n    \"lon\" :y , \n    \"speed\":spe,\n    \"batterypercentage\":battery,\n    \"amount\":amm\n}\nglobal.set(\"seller_data\", msg.payload );\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 860,
        "wires": [
            [
                "c987800ecb0a65e2"
            ]
        ]
    },
    {
        "id": "c987800ecb0a65e2",
        "type": "debug",
        "z": "d4aef6c4530e32a5",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 800,
        "wires": []
    },
    {
        "id": "bf3044ddcc1b6211",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "array for accepting requests data",
        "func": "global.set(\"arr\",[]);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 690,
        "wires": [
            []
        ]
    },
    {
        "id": "903a4d0c66e1c0f8",
        "type": "link out",
        "z": "d4aef6c4530e32a5",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "d9359789057dbe80",
            "996b64a2fa3898b3"
        ],
        "x": 75,
        "y": 120,
        "wires": []
    },
    {
        "id": "447f06a9c4b59e1d",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "filter only my ID",
        "func": "if (msg.payload.buyer_ID == global.get(\"My_ID\"))\n{\n    return msg\n    }\nelse{\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 930,
        "wires": [
            [
                "fbfbdd20a899031f"
            ]
        ]
    },
    {
        "id": "9d1c5152e79a252c",
        "type": "inject",
        "z": "d4aef6c4530e32a5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 790,
        "y": 270,
        "wires": [
            [
                "cfcfb281ed04268d"
            ]
        ]
    },
    {
        "id": "4f184f50e6a62503",
        "type": "debug",
        "z": "d4aef6c4530e32a5",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 390,
        "wires": []
    },
    {
        "id": "cfcfb281ed04268d",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "function 34",
        "func": "msg.payload=flow.get(\"amount\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 330,
        "wires": [
            [
                "4f184f50e6a62503"
            ]
        ]
    },
    {
        "id": "e76c4527236a86d4",
        "type": "comment",
        "z": "d4aef6c4530e32a5",
        "name": "send request format",
        "info": "{\"ID\":1000148827,\n\"lat\":31.130474,\n\"lon\":31.645777,\n\"amount\":40,\n\"price\":2\n}",
        "x": 960,
        "y": 120,
        "wires": []
    },
    {
        "id": "eb02fe7e64ce2b68",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "array for accepting requests data if time equal",
        "func": "global.set(\"arrrr\",[]);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "1c598502f9640271",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "price ",
        "func": "var minpri = .25;\nvar p = .05\nif (msg.payload <= 5 && msg.payload>0){\n    msg.payload=minpri\n}else if(msg.payload>5){\n    msg.payload=(msg.payload)*p\n}else{\n    msg.payload=null\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 70,
        "y": 560,
        "wires": [
            [
                "2d518c83c1185fa1"
            ]
        ]
    },
    {
        "id": "63b7e894834c1852",
        "type": "function",
        "z": "d4aef6c4530e32a5",
        "name": "array for accepting requests data if price equal",
        "func": "global.set(\"arrrrr\",[]);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "a3a3aa25.e2e358",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "calculate distance between 2 vechiles",
        "func": "//Credit: https://javascript.plainenglish.io/calculating-azimuth-distance-and-altitude-from-a-pair-of-gps-locations-36b4325d8ab0\n\nfunction ParseAngle(ang, limit) {\n    var angle = parseFloat(ang);\n    if (isNaN(angle) || (angle < -limit) || (angle > limit)) {\n        node.error(\"Invalid angle value.\", msg);\n        return null;\n    } else {\n        return angle;\n    }\n}\n\nfunction ParseElevation(el) {\n    var angle = parseFloat(el);\n    if (isNaN(angle)) {\n        node.error(\"Invalid elevation value.\", msg);\n        return null;\n    } else {\n        return angle;\n    }\n}\n\nfunction ParseLocation(pos) {\n    var lat = ParseAngle(pos.lat, 90.0);\n    var location = null;\n    if (lat != null) {\n        var lon = ParseAngle(pos.lon, 180.0);\n        if (lon != null) {\n            var elv = ParseElevation(pos.elv);\n            if (elv != null) {\n                location = { lat: lat, lon: lon, elv: elv };\n            }\n        }\n    }\n    return location;\n}\n\nfunction EarthRadiusInMeters(latitudeRadians) {\n    // latitudeRadians is geodetic, i.e. that reported by GPS.\n    // http://en.wikipedia.org/wiki/Earth_radius\n    var a = 6378137.0;  // equatorial radius in meters\n    var b = 6356752.3;  // polar radius in meters\n    var cos = Math.cos(latitudeRadians);\n    var sin = Math.sin(latitudeRadians);\n    var t1 = a * a * cos;\n    var t2 = b * b * sin;\n    var t3 = a * cos;\n    var t4 = b * sin;\n    return Math.sqrt((t1 * t1 + t2 * t2) / (t3 * t3 + t4 * t4));\n}\n\nfunction GeocentricLatitude(lat) {\n    // Convert geodetic latitude 'lat' to a geocentric latitude 'clat'.\n    // Geodetic latitude is the latitude as given by GPS.\n    // Geocentric latitude is the angle measured from center of Earth between a point and the equator.\n    // https://en.wikipedia.org/wiki/Latitude#Geocentric_latitude\n    var e2 = 0.00669437999014;\n    var clat = Math.atan((1.0 - e2) * Math.tan(lat));\n    return clat;\n}\n\nfunction LocationToPoint(c) {\n    // Convert (lat, lon, elv) to (x, y, z).\n    var lat = c.lat * Math.PI / 180.0;\n    var lon = c.lon * Math.PI / 180.0;\n    var radius = EarthRadiusInMeters(lat);\n    var clat = GeocentricLatitude(lat);\n\n    var cosLon = Math.cos(lon);\n    var sinLon = Math.sin(lon);\n    var cosLat = Math.cos(clat);\n    var sinLat = Math.sin(clat);\n    var x = radius * cosLon * cosLat;\n    var y = radius * sinLon * cosLat;\n    var z = radius * sinLat;\n\n    // We used geocentric latitude to calculate (x,y,z) on the Earth's ellipsoid.\n    // Now we use geodetic latitude to calculate normal vector from the surface, to correct for elevation.\n    var cosGlat = Math.cos(lat);\n    var sinGlat = Math.sin(lat);\n\n    var nx = cosGlat * cosLon;\n    var ny = cosGlat * sinLon;\n    var nz = sinGlat;\n\n    x += c.elv * nx;\n    y += c.elv * ny;\n    z += c.elv * nz;\n\n    return { x: x, y: y, z: z, radius: radius, nx: nx, ny: ny, nz: nz };\n}\n\nfunction Distance(ap, bp) {\n    var dx = ap.x - bp.x;\n    var dy = ap.y - bp.y;\n    var dz = ap.z - bp.z;\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\nfunction RotateGlobe(b, a, bradius, aradius) {\n    // Get modified coordinates of 'b' by rotating the globe so that 'a' is at lat=0, lon=0.\n    var br = { lat: b.lat, lon: (b.lon - a.lon), elv: b.elv };\n    var brp = LocationToPoint(br);\n\n    // Rotate brp cartesian coordinates around the z-axis by a.lon degrees,\n    // then around the y-axis by a.lat degrees.\n    // Though we are decreasing by a.lat degrees, as seen above the y-axis,\n    // this is a positive (counterclockwise) rotation (if B's longitude is east of A's).\n    // However, from this point of view the x-axis is pointing left.\n    // So we will look the other way making the x-axis pointing right, the z-axis\n    // pointing up, and the rotation treated as negative.\n\n    var alat = GeocentricLatitude(-a.lat * Math.PI / 180.0);\n    var acos = Math.cos(alat);\n    var asin = Math.sin(alat);\n\n    var bx = (brp.x * acos) - (brp.z * asin);\n    var by = brp.y;\n    var bz = (brp.x * asin) + (brp.z * acos);\n\n    return { x: bx, y: by, z: bz, radius: bradius };\n}\n\nfunction NormalizeVectorDiff(b, a) {\n    // Calculate norm(b-a), where norm divides a vector by its length to produce a unit vector.\n    var dx = b.x - a.x;\n    var dy = b.y - a.y;\n    var dz = b.z - a.z;\n    var dist2 = dx * dx + dy * dy + dz * dz;\n    if (dist2 == 0) {\n        return null;\n    }\n    var dist = Math.sqrt(dist2);\n    return { x: (dx / dist), y: (dy / dist), z: (dz / dist), radius: 1.0 };\n}\n\nfunction Calculate(pos1, pos2) {\n   \n    var result = {\n        from: pos1,\n        to: pos2,\n    };\n\n    var a = ParseLocation(pos1);\n    if (a != null) {\n        var b = ParseLocation(pos2);\n        if (b != null) {\n            var ap = LocationToPoint(a);\n            var bp = LocationToPoint(b);\n            var distKm = 0.001 * Distance(ap, bp);\n            result.distanceKm = distKm;\n\n            // Let's use a trick to calculate azimuth:\n            // Rotate the globe so that point A looks like latitude 0, longitude 0.\n            // We keep the actual radii calculated based on the oblate geoid,\n            // but use angles based on subtraction.\n            // Point A will be at x=radius, y=0, z=0.\n            // Vector difference B-A will have dz = N/S component, dy = E/W component.\n            var br = RotateGlobe(b, a, bp.radius, ap.radius);\n            if (br.z * br.z + br.y * br.y > 1.0e-6) {\n                var theta = Math.atan2(br.z, br.y) * 180.0 / Math.PI;\n                var azimuth = 90.0 - theta;\n                if (azimuth < 0.0) {\n                    azimuth += 360.0;\n                }\n                if (azimuth > 360.0) {\n                    azimuth -= 360.0;\n                }\n                result.azimuth = azimuth;\n            }\n\n            var bma = NormalizeVectorDiff(bp, ap);\n            if (bma != null) {\n                // Calculate altitude, which is the angle above the horizon of B as seen from A.\n                // Almost always, B will actually be below the horizon, so the altitude will be negative.\n                // The dot product of bma and norm = cos(zenith_angle), and zenith_angle = (90 deg) - altitude.\n                // So altitude = 90 - acos(dotprod).\n                var altitude = 90.0 - (180.0 / Math.PI) * Math.acos(bma.x * ap.nx + bma.y * ap.ny + bma.z * ap.nz);\n                result.altitude = altitude;\n            }\n        }\n    }\n    return result;\n}\nmsg.payload = Calculate(msg.payload.from, msg.payload.to);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 120,
        "wires": [
            [
                "c940647c27f565dc"
            ]
        ]
    },
    {
        "id": "8daeb3b9.878cd",
        "type": "inject",
        "z": "9bbcb18b5b14f0c7",
        "name": "{\"from\":{me},\"to\":{dekernis}}",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "to",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"from\":{\"lat\":31.130533,\"lon\":31.645807,\"elv\":0},\"to\":{\"lat\":31.084369,\"lon\":31.579162,\"elv\":0}}",
        "payloadType": "json",
        "x": 260,
        "y": 90,
        "wires": [
            [
                "a3a3aa25.e2e358"
            ]
        ]
    },
    {
        "id": "c940647c27f565dc",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "function 9",
        "func": "let x = msg.payload.distanceKm;\nlet y = global.get(\"seller_speed\");\nlet z = x / y\nlet time = global.set(\"time\", z);\nlet a = global.get(\"amount\");\nlet l = global.get(\"seller_battery_per\");\nlet q = a*0.1 ;\nlet w =(2-(l/100))*q ;\nglobal.set(\"charge-time\", w);\nmsg.payload={\n    \"seller_id\":global.get(\"seller_ID\"),\n    \"lat\": global.get(\"seller_lat\"),\n    \"lon\":global.get(\"seller_lon\"),\n    \"speed\": global.get(\"seller_speed\"),\n    \"batterypercentage\": global.get(\"seller_battery_per\") ,\n    \"arrievetime\": global.get(\"time\"),\n    \"chargetime\": global.get(\"charge-time\"),\n    \"distance\": msg.payload.distanceKm ,\n    \"price\": global.get(\"seller_price\")\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 110,
        "wires": [
            [
                "986a856273c3c1d0"
            ]
        ]
    },
    {
        "id": "f34cfe730ca2de55",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "function 20",
        "func": "\n\nmsg.payload=\n{\n    \"from\": {\n        \"lat\": global.get(\"lat\"),\n        \"lon\": global.get(\"lon\"),\n        \"elv\": 0\n    },\n    \"to\": {\n        \"lat\": global.get(\"seller_lat\"),\n        \"lon\": global.get(\"seller_lon\"),\n        \"elv\": 0\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 230,
        "wires": [
            [
                "a3a3aa25.e2e358"
            ]
        ]
    },
    {
        "id": "189cf6418608862a",
        "type": "counter",
        "z": "9bbcb18b5b14f0c7",
        "inc": 1,
        "name": "",
        "x": 160,
        "y": 230,
        "wires": [
            [
                "12968281546f121f"
            ]
        ]
    },
    {
        "id": "28988e9607b47920",
        "type": "mqtt in",
        "z": "9bbcb18b5b14f0c7",
        "name": "",
        "topic": "/accept_request",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "594a08462165f36a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 140,
        "wires": [
            [
                "8238b48f05693ba3",
                "e6bf8eb2212acb19"
            ]
        ]
    },
    {
        "id": "12968281546f121f",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "function 21",
        "func": "global.set(\"counter\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 270,
        "wires": [
            [
                "50c155739437b199"
            ]
        ]
    },
    {
        "id": "986a856273c3c1d0",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "function 23",
        "func": "(global.get(\"arr\"))[(global.get(\"counter\"))-1]=msg.payload\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 170,
        "wires": [
            [
                "4d2e2557142d6341"
            ]
        ]
    },
    {
        "id": "4d2e2557142d6341",
        "type": "debug",
        "z": "9bbcb18b5b14f0c7",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 230,
        "wires": []
    },
    {
        "id": "50c155739437b199",
        "type": "ui_text",
        "z": "9bbcb18b5b14f0c7",
        "group": "1fa043305c7b3931",
        "order": 6,
        "width": 5,
        "height": 2,
        "name": "",
        "label": "number of  responders",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 220,
        "y": 320,
        "wires": []
    },
    {
        "id": "76328d949aec98ea",
        "type": "inject",
        "z": "9bbcb18b5b14f0c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 580,
        "wires": [
            [
                "d8e6c598687d3a76"
            ]
        ]
    },
    {
        "id": "14d1311a812d047a",
        "type": "debug",
        "z": "9bbcb18b5b14f0c7",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 570,
        "wires": []
    },
    {
        "id": "81312b487e1fe557",
        "type": "ui_button",
        "z": "9bbcb18b5b14f0c7",
        "name": "",
        "group": "1fa043305c7b3931",
        "order": 14,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Optimum time",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 650,
        "wires": [
            [
                "d8e6c598687d3a76"
            ]
        ]
    },
    {
        "id": "8238b48f05693ba3",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "filter only my ID",
        "func": "if (msg.payload.buyer_ID == global.get(\"My_ID\"))\n{\n    return msg\n    }\nelse{\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 170,
        "wires": [
            [
                "f34cfe730ca2de55"
            ]
        ]
    },
    {
        "id": "e6bf8eb2212acb19",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "filter only my ID",
        "func": "if (msg.payload.buyer_ID == global.get(\"My_ID\"))\n{\n    return msg\n    }\nelse{\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 190,
        "wires": [
            [
                "189cf6418608862a"
            ]
        ]
    },
    {
        "id": "19784e8a0aeb6ffb",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "calculate time to arrive",
        "func": "let x = msg.payload.distanceKm ;\nlet y = global.get(\"seller_speed\");\nlet z = x/y\nlet time = global.set(\"time\", z);\nmsg.payload = {\n    \"time\":z\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 290,
        "wires": [
            [
                "f522192f2ef9d57c"
            ]
        ]
    },
    {
        "id": "f522192f2ef9d57c",
        "type": "debug",
        "z": "9bbcb18b5b14f0c7",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 300,
        "wires": []
    },
    {
        "id": "d8e6c598687d3a76",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "caculate minmum time",
        "func": "var x = global.get(\"arr\");\nvar id = x[0].seller_id;\nvar min_lat = x[0].lat;\nvar min_lon = x[0].lon;\nvar smallest = x[0].distance;\nvar speed = x[0].speed ;\nvar battery = x[0].batterypercentage;\nvar pri = x[0].price\nvar smallest_arit = x[0].arrievetime;\nvar smallest_cht = x[0].chargetime ;\nvar smallest_t = smallest_arit + smallest_cht ;\n\nfor (var i = 1; i < x.length; i++) {\n    if ((x[i].arrievetime + x[i].chargetime)  < smallest_t) {\n        smallest = x[i].distance;\n        id = x[i].seller_id;\n        min_lat = x[i].lat;\n        min_lon = x[i].lon;\n        speed = x[i].speed;\n        battery = x[i].batterypercentage;\n        smallest_arit = x[i].arrievetime\n        smallest_cht = x[i].chargetime\n        pri=x[i].price\n    }\n}\n\nlet opt = {\n    \"seller_id\": id,\n    \"lat\":min_lat,\n    \"lon\":min_lon,\n    \"speed\":speed,\n    \"batterypercentage\":battery,\n    \"arrievetime\": smallest_arit,\n    \"chargetime\": smallest_cht,\n    \"distance\": smallest,\n    \"price\": pri\n}\nglobal.set(\"optitimeobj\",opt);\n\n\nmsg.payload = [{\n    \"seller_id\": id,\n    \"distance\": smallest,\n    \"arrive time\": smallest_arit ,\n    \"charge time\" : smallest_cht ,\n    \"price\": pri\n}]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 610,
        "wires": [
            [
                "14d1311a812d047a",
                "c54bc75b23b47038",
                "8c28822194bd18ef"
            ]
        ]
    },
    {
        "id": "c54bc75b23b47038",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "function 43",
        "func": "global.set(\"min_id\", msg.payload[0].seller_id );\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "8eb0b7522e48a91e",
        "type": "ui_worldmap",
        "z": "9bbcb18b5b14f0c7",
        "group": "2625aaac8c7fa956",
        "order": 2,
        "width": 30,
        "height": 11,
        "name": "",
        "lat": " 31.130768",
        "lon": " 31.643557",
        "zoom": "18",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "hide",
        "layers": "hide",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "showruler": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriDG,UKOS",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 860,
        "y": 900,
        "wires": []
    },
    {
        "id": "27640fd87d556767",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "minimum distance",
        "func": "msg.payload =\n{\n    \"name\": global.get(\"bla\"),\n    \"lat\": global.get(\"min_lat_tp\"),\n    \"lon\": global.get(\"min_lon_tp\"),\n    \"icon\":\"car\",\n    \"iconColor\": \"black\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 870,
        "wires": [
            [
                "8eb0b7522e48a91e"
            ]
        ]
    },
    {
        "id": "cc01590fb201fd00",
        "type": "ui_button",
        "z": "9bbcb18b5b14f0c7",
        "name": "",
        "group": "1fa043305c7b3931",
        "order": 26,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "show on map",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 930,
        "wires": [
            [
                "27640fd87d556767",
                "d92d82a9a4ad2808",
                "76b24282cd3feada"
            ]
        ]
    },
    {
        "id": "d92d82a9a4ad2808",
        "type": "switch",
        "z": "9bbcb18b5b14f0c7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 1030,
        "wires": [
            [
                "d81cf4960a33cac1"
            ],
            [
                "259e6076abeace67"
            ]
        ]
    },
    {
        "id": "c66d0c615f607e0f",
        "type": "ui_button",
        "z": "9bbcb18b5b14f0c7",
        "name": "",
        "group": "1fa043305c7b3931",
        "order": 41,
        "width": 7,
        "height": 1,
        "passthru": false,
        "label": "hide map",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 1040,
        "wires": [
            [
                "d92d82a9a4ad2808"
            ]
        ]
    },
    {
        "id": "d81cf4960a33cac1",
        "type": "change",
        "z": "9bbcb18b5b14f0c7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"make-request_seller_location\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1020,
        "wires": [
            [
                "beda53eeb0fc0dd4"
            ]
        ]
    },
    {
        "id": "259e6076abeace67",
        "type": "change",
        "z": "9bbcb18b5b14f0c7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"make-request_seller_location\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1060,
        "wires": [
            [
                "beda53eeb0fc0dd4"
            ]
        ]
    },
    {
        "id": "beda53eeb0fc0dd4",
        "type": "ui_ui_control",
        "z": "9bbcb18b5b14f0c7",
        "name": "",
        "events": "all",
        "x": 840,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "76b24282cd3feada",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "function 52",
        "func": "msg.payload =\n{\n    \"name\": \"ME\",\n    \"lat\": global.get(\"lat\"),\n    \"lon\": global.get(\"lon\"),\n    \"iconColor\": \"black\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 930,
        "wires": [
            [
                "8eb0b7522e48a91e"
            ]
        ]
    },
    {
        "id": "604dec7c87f63bcf",
        "type": "link out",
        "z": "9bbcb18b5b14f0c7",
        "name": "optimum object out",
        "mode": "link",
        "links": [
            "c173cd1bcda1f1b5"
        ],
        "x": 1025,
        "y": 670,
        "wires": []
    },
    {
        "id": "9cfc0ed8264814c6",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "minimum price",
        "func": "var z = msg.payload\nvar id = z[0].seller_id;\nvar min_lat = z[0].lat;\nvar min_lon = z[0].lon;\nvar smallest = z[0].price;\nvar dis = z[0].distance;\nvar chti=z[0].chargetime;\nvar arrti=z[0].arrievetime;\nfor (var i = 1; i < z.length; i++) {\n    if (z[i].price < smallest) {\n        smallest = z[i].price;\n        id = z[i].seller_id;\n        min_lat = z[i].lat;\n        min_lon = z[i].lon;\n        dis = z[i].distance;\n        chti = z[i].chargetime;\n        arrti = z[i].arrievetime;\n    }\n}\n\nglobal.set(\"bla\", id);\nglobal.set(\"blabla\", smallest);\nglobal.set(\"min_lat_tp\", min_lat);\nglobal.set(\"min_lon_tp\", min_lon);\n\nmsg.payload = [{\n    \"seller_id\": id,\n    \"Distance\": dis,\n    \"arrive time\":arrti,\n    \"charge time\":chti,\n    \"price\": smallest\n}]\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 680,
        "wires": [
            [
                "604dec7c87f63bcf"
            ]
        ]
    },
    {
        "id": "8c28822194bd18ef",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "caculate nearly  time",
        "func": "var n = global.get(\"arrrr\");\nn[0] = global.get(\"optitimeobj\");\nvar q = 1\nvar x = global.get(\"arr\");\nvar y = x[0].arrievetime + x[0].chargetime\nvar u = n[0].arrievetime + n[0].chargetime + 0.25\nfor (var i = 0; i < x.length; i++) {\n    if( (x[i].arrievetime + x[i].chargetime) <= u){\n     \n     n[q] = x[i]\n     q+=1\n    \n    }\n}\nmsg.payload=n\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 650,
        "wires": [
            [
                "9cfc0ed8264814c6"
            ]
        ]
    },
    {
        "id": "f872a4ff3cf76a9b",
        "type": "link in",
        "z": "9bbcb18b5b14f0c7",
        "name": "world map in",
        "links": [
            "4a3d06301608e582"
        ],
        "x": 675,
        "y": 800,
        "wires": [
            [
                "8eb0b7522e48a91e"
            ]
        ]
    },
    {
        "id": "ad1d2a45ec7ba1b3",
        "type": "link in",
        "z": "9bbcb18b5b14f0c7",
        "name": "link in 1",
        "links": [
            "747968754106495a"
        ],
        "x": 315,
        "y": 1130,
        "wires": [
            [
                "d92d82a9a4ad2808"
            ]
        ]
    },
    {
        "id": "6522b27fac2da19c",
        "type": "ui_button",
        "z": "9bbcb18b5b14f0c7",
        "name": "",
        "group": "1fa043305c7b3931",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Restart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "reset",
        "topicType": "msg",
        "x": 130,
        "y": 480,
        "wires": [
            [
                "2f77037418076798"
            ]
        ]
    },
    {
        "id": "2f77037418076798",
        "type": "function",
        "z": "9bbcb18b5b14f0c7",
        "name": "msg object",
        "func": "msg.reset = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 110,
        "y": 400,
        "wires": [
            [
                "189cf6418608862a"
            ]
        ]
    },
    {
        "id": "5a49e3b1d97b2ef1",
        "type": "function",
        "z": "08ac8e87d86fc868",
        "name": "calculate small distance",
        "func": "var x = global.get(\"arr\");\n    var id = x[0].seller_id;\n    var min_lat = x[0].lat;\n    var min_lon = x[0].lon;\n    var smallest =x[0].distance;\n    for (var i = 1; i < x.length; i++) {\n    if (x[i].distance < smallest) {\n        smallest = x[i].distance;\n        id = x[i].seller_id;\n        min_lat=x[i].lat;\n        min_lon=x[i].lon;\n    }\n}\nglobal.set(\"bla\", id);\nglobal.set(\"blabla\", smallest);\nglobal.set(\"min_lat\", min_lat);\nglobal.set(\"min_lon\", min_lon);\nmsg.payload=[{\n    \"seller_id\": id ,\n    \"smallest_distance\" : smallest\n}]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "676d113f8706b1d8",
        "type": "function",
        "z": "08ac8e87d86fc868",
        "name": "calculate small price",
        "func": "var x = global.get(\"arr\");\n    var id = x[0].seller_id;\n    var min_lat = x[0].lat;\n    var min_lon = x[0].lon;\n    var smallest =x[0].price;\n    var speed = x[0].speed;\n    var battery = x[0].batterypercentage;\n    var distance = x[0].distance\n    var arrti = x[0].arrievetime\n    var chargeti = x[0].chargetime\n    for (var i = 1; i < x.length; i++) {\n    if (x[i].price < smallest) {\n        smallest = x[i].price;\n        id = x[i].seller_id;\n        min_lat=x[i].lat;\n        min_lon=x[i].lon;\n        distance=x[i].distance;\n        arrti = x[i].arrievetime;\n        chargeti = x[i].chargetime;\n        speed=x[i].speed;\n        battery = x[0].batterypercentage;\n    }\n}\n\nlet obt={\n    \"seller_id\": id ,\n    \"lat\":min_lat,\n    \"lon\":min_lon,\n    \"speed\":speed,\n    \"batterypercentage\": battery,\n    \"arrievetime\":arrti,\n    \"chargetime\":chargeti,\n    \"distance\": distance,\n    \"price\" : smallest\n}\nglobal.set(\"obtprice\", obt);\nmsg.payload=[obt]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 250,
        "wires": [
            [
                "b5f70a593569fb02"
            ]
        ]
    },
    {
        "id": "10a0f80377d84176",
        "type": "inject",
        "z": "08ac8e87d86fc868",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 230,
        "wires": [
            [
                "676d113f8706b1d8"
            ]
        ]
    },
    {
        "id": "799333894838d92a",
        "type": "debug",
        "z": "08ac8e87d86fc868",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 240,
        "wires": []
    },
    {
        "id": "3fd42a7b4572e9b0",
        "type": "ui_button",
        "z": "08ac8e87d86fc868",
        "name": "",
        "group": "1fa043305c7b3931",
        "order": 16,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "optimum price",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 290,
        "wires": [
            [
                "676d113f8706b1d8"
            ]
        ]
    },
    {
        "id": "c173cd1bcda1f1b5",
        "type": "link in",
        "z": "08ac8e87d86fc868",
        "name": "obtimum object in",
        "links": [
            "604dec7c87f63bcf"
        ],
        "x": 675,
        "y": 90,
        "wires": [
            [
                "a7331097c1b69e7e"
            ]
        ]
    },
    {
        "id": "a7331097c1b69e7e",
        "type": "ui_table",
        "z": "08ac8e87d86fc868",
        "group": "1fa043305c7b3931",
        "name": "",
        "order": 35,
        "width": 19,
        "height": 2,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 910,
        "y": 110,
        "wires": []
    },
    {
        "id": "0a17cac44d41ec64",
        "type": "function",
        "z": "08ac8e87d86fc868",
        "name": "calculate small price",
        "func": "var x = global.get(\"arr\");\n    var id = x[0].seller_id;\n    var min_lat = x[0].lat;\n    var min_lon = x[0].lon;\n    var smallest =x[0].price;\n    var distance = x[0].distance\n    var arrti = x[0].arrievetime\n    var chargeti = x[0].chargetime\n    for (var i = 1; i < x.length; i++) {\n    if (x[i].price < smallest) {\n        smallest = x[i].price;\n        id = x[i].seller_id;\n        min_lat=x[i].lat;\n        min_lon=x[i].lon;\n        distance=x[i].distance;\n        arrti = x[i].arrievetime;\n        chargeti = x[i].chargetime;\n    }\n}\nglobal.set(\"blapr\", id);\nglobal.set(\"blablapr\", smallest);\nglobal.set(\"min_lat_pr\", min_lat);\nglobal.set(\"min_lon_pr\", min_lon);\nmsg.payload=[{\n    \"seller_id\": id ,\n    \"distance\":distance,\n    \"arrive time\":arrti,\n    \"charge time\":chargeti,\n    \"price\" : smallest\n}]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "b5f70a593569fb02",
        "type": "function",
        "z": "08ac8e87d86fc868",
        "name": "same prices",
        "func": "var x = global.get(\"arr\");\nvar z =global.get(\"arrrrr\");\nz[0] = global.get(\"obtprice\");\nvar q=1\nfor (let i = 0; i < x.length; i++) {\n    if(z[0].price == x[i].price){\n        z[q]=x[i]\n    }\n    \n}\nmsg.payload=z\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 330,
        "wires": [
            [
                "5015773d96155c7a"
            ]
        ]
    },
    {
        "id": "5015773d96155c7a",
        "type": "function",
        "z": "08ac8e87d86fc868",
        "name": "caculate minmum time",
        "func": "var x = msg.payload;\nvar id = x[0].seller_id;\nvar min_lat = x[0].lat;\nvar min_lon = x[0].lon;\nvar smallest = x[0].distance;\nvar speed = x[0].speed ;\nvar battery = x[0].batterypercentage;\nvar pri = x[0].price\nvar smallest_arit = x[0].arrievetime;\nvar smallest_cht = x[0].chargetime ;\nvar smallest_t = smallest_arit + smallest_cht ;\n\nfor (var i = 1; i < x.length; i++) {\n    if ((x[i].arrievetime + x[i].chargetime)  < smallest_t) {\n        smallest = x[i].distance;\n        id = x[i].seller_id;\n        min_lat = x[i].lat;\n        min_lon = x[i].lon;\n        speed = x[i].speed;\n        battery = x[i].batterypercentage;\n        smallest_arit = x[i].arrievetime\n        smallest_cht = x[i].chargetime\n        pri=x[i].price\n    }\n}\n \nglobal.set(\"price_id\", id);\nglobal.set(\"price_lat\",min_lat);\nglobal.set(\"price_lon\", min_lon);\n\nmsg.payload = [{\n    \"seller_id\": id,\n    \"distance\": smallest,\n    \"arrive time\": smallest_arit ,\n    \"charge time\" : smallest_cht ,\n    \"price\": pri\n}]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 290,
        "wires": [
            [
                "799333894838d92a",
                "a7331097c1b69e7e"
            ]
        ]
    },
    {
        "id": "4a3d06301608e582",
        "type": "link out",
        "z": "08ac8e87d86fc868",
        "name": "world map out",
        "mode": "link",
        "links": [
            "f872a4ff3cf76a9b"
        ],
        "x": 835,
        "y": 450,
        "wires": []
    },
    {
        "id": "61fea184a5311fc5",
        "type": "ui_button",
        "z": "08ac8e87d86fc868",
        "name": "",
        "group": "1fa043305c7b3931",
        "order": 28,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "show on map",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 450,
        "wires": [
            [
                "1f078794e7163601",
                "5d5a482967201bba",
                "747968754106495a"
            ]
        ]
    },
    {
        "id": "1f078794e7163601",
        "type": "function",
        "z": "08ac8e87d86fc868",
        "name": "minimum distance",
        "func": "msg.payload =\n{\n    \"name\": global.get(\"price_id\"),\n    \"lat\": global.get(\"price_lat\"),\n    \"lon\": global.get(\"price_lon\"),\n    \"icon\":\"car\",\n    \"iconColor\": \"black\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 420,
        "wires": [
            [
                "4a3d06301608e582",
                "bf51fa2162ce3085"
            ]
        ]
    },
    {
        "id": "5d5a482967201bba",
        "type": "function",
        "z": "08ac8e87d86fc868",
        "name": "function 59",
        "func": "msg.payload =\n{\n    \"name\": \"ME\",\n    \"lat\": global.get(\"lat\"),\n    \"lon\": global.get(\"lon\"),\n    \"iconColor\": \"black\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 480,
        "wires": [
            [
                "4a3d06301608e582"
            ]
        ]
    },
    {
        "id": "bf51fa2162ce3085",
        "type": "debug",
        "z": "08ac8e87d86fc868",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 400,
        "wires": []
    },
    {
        "id": "747968754106495a",
        "type": "link out",
        "z": "08ac8e87d86fc868",
        "name": "show price chart",
        "mode": "link",
        "links": [
            "ad1d2a45ec7ba1b3"
        ],
        "x": 365,
        "y": 510,
        "wires": []
    },
    {
        "id": "17e1de97f1f5036d",
        "type": "ui_table",
        "z": "dcbd24beb8c394c1",
        "group": "1b47bda6910d4617",
        "name": "",
        "order": 2,
        "width": 30,
        "height": 9,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 620,
        "y": 110,
        "wires": []
    },
    {
        "id": "d9c9391c8c34c2b4",
        "type": "function",
        "z": "dcbd24beb8c394c1",
        "name": "array of responders",
        "func": "msg.payload=global.get(\"arr\");\nreturn [msg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 80,
        "wires": [
            [
                "17e1de97f1f5036d",
                "f6a4f5bdc8aec016"
            ]
        ]
    },
    {
        "id": "aeb98d965e69bda0",
        "type": "ui_button",
        "z": "dcbd24beb8c394c1",
        "name": "",
        "group": "1b47bda6910d4617",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "show data",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 90,
        "wires": [
            [
                "d9c9391c8c34c2b4"
            ]
        ]
    },
    {
        "id": "a5025ebd226cc456",
        "type": "function",
        "z": "dcbd24beb8c394c1",
        "name": "function 32",
        "func": "var x = global.get(\"arr\");\nvar id = x[0].seller_id;\nvar min_lat = x[0].lat;\nvar min_lon = x[0].lon;\nvar smallest = x[0].distance;\nvar speed = x[0].speed ;\nvar smallest_t = x[0].arrievetime;\n\nfor (var i = 1; i < x.length; i++) {\n    if (x[i].arrievetime  < smallest_t) {\n        smallest = x[i].distance;\n        id = x[i].seller_id;\n        min_lat = x[i].lat;\n        min_lon = x[i].lon;\n        smallest_t = x[i].arrievetime\n    }\n}\nglobal.set(\"bla\", id);\nglobal.set(\"blabla\", smallest);\nglobal.set(\"min_lat\", min_lat);\nglobal.set(\"min_lon\", min_lon);\n\nmsg.payload = [{\n    \"seller_id\": id,\n    \"smallest_distance\": smallest,\n    \"min time\":smallest_t\n}]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 460,
        "wires": [
            [
                "019f9a87b633c889"
            ]
        ]
    },
    {
        "id": "19a59cdbabda8839",
        "type": "inject",
        "z": "dcbd24beb8c394c1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "a5025ebd226cc456",
                "36d50d54135f1409"
            ]
        ]
    },
    {
        "id": "019f9a87b633c889",
        "type": "debug",
        "z": "dcbd24beb8c394c1",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 460,
        "wires": []
    },
    {
        "id": "5e3ff5b5462bd6eb",
        "type": "inject",
        "z": "dcbd24beb8c394c1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "d9c9391c8c34c2b4"
            ]
        ]
    },
    {
        "id": "36d50d54135f1409",
        "type": "function",
        "z": "dcbd24beb8c394c1",
        "name": "function 33",
        "func": "var x = global.get(\"arr\");\nmsg.payload = x[0].arrievetime\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 530,
        "wires": [
            [
                "c3454a749c8d92c9"
            ]
        ]
    },
    {
        "id": "c3454a749c8d92c9",
        "type": "debug",
        "z": "dcbd24beb8c394c1",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 540,
        "wires": []
    },
    {
        "id": "2d2dd33723d2206d",
        "type": "function",
        "z": "dcbd24beb8c394c1",
        "name": "caculate minmum time",
        "func": "var x = global.get(\"arr\");\nvar id = x[0].seller_id;\nvar min_lat = x[0].lat;\nvar min_lon = x[0].lon;\nvar smallest = x[0].distance;\nvar speed = x[0].speed ;\nvar smallest_arit = x[0].arrievetime;\nvar smallest_cht = x[0].chargetime\nvar smallest_t = smallest_arit + smallest_cht\n\nfor (var i = 1; i < x.length; i++) {\n    if ((x[i].arrievetime + x[i].chargetime)  < smallest_t) {\n        smallest = x[i].distance;\n        id = x[i].seller_id;\n        min_lat = x[i].lat;\n        min_lon = x[i].lon;\n        smallest_arit = x[i].arrievetime\n        smallest_cht = x[i].chargetime\n    }\n}\nglobal.set(\"bla\", id);\nglobal.set(\"blabla\", smallest);\nglobal.set(\"min_lat\", min_lat);\nglobal.set(\"min_lon\", min_lon);\n\nmsg.payload = [{\n    \"seller_id\": id,\n    \"smallest_distance\": smallest,\n    \"min time\": smallest_cht+smallest_arit\n}]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 280,
        "wires": [
            [
                "a6dae7b43403cb66"
            ]
        ]
    },
    {
        "id": "12ba3e286578f2f8",
        "type": "inject",
        "z": "dcbd24beb8c394c1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 280,
        "wires": [
            [
                "2d2dd33723d2206d"
            ]
        ]
    },
    {
        "id": "a6dae7b43403cb66",
        "type": "debug",
        "z": "dcbd24beb8c394c1",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 280,
        "wires": []
    },
    {
        "id": "f6a4f5bdc8aec016",
        "type": "debug",
        "z": "dcbd24beb8c394c1",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 150,
        "wires": []
    },
    {
        "id": "1dbb75fae62e23fa",
        "type": "mqtt in",
        "z": "e50dde15ea72613e",
        "name": "",
        "topic": "/send_request",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "594a08462165f36a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 230,
        "wires": [
            [
                "edc6873a6a346f1a",
                "39b387d11af04fe5"
            ]
        ]
    },
    {
        "id": "edc6873a6a346f1a",
        "type": "function",
        "z": "e50dde15ea72613e",
        "name": "function 36",
        "func": "if (msg.payload.ID != global.get(\"My_ID\")){\n    return msg\n}else{\n    null\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 160,
        "wires": [
            [
                "b1af70e896f5010a"
            ]
        ]
    },
    {
        "id": "dea3c268f7f52feb",
        "type": "ui_toast",
        "z": "e50dde15ea72613e",
        "position": "prompt",
        "displayTime": "10",
        "highlight": "15",
        "sendall": true,
        "outputs": 1,
        "ok": "Accept",
        "cancel": "Reject",
        "raw": true,
        "className": "",
        "topic": "Request",
        "name": "",
        "x": 1020,
        "y": 260,
        "wires": [
            [
                "375c6e37a4136db6"
            ]
        ]
    },
    {
        "id": "5ab2bbbce39da60c",
        "type": "function",
        "z": "e50dde15ea72613e",
        "name": "function 37",
        "func": "msg.payload = `${global.get(\"I\")}Send you request for charging amount of ${global.get(\"amou\")}KW ,\\\n \\n price =${global.get(\"pri\")}ETH \n distance =${msg.payload}KM  `\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 190,
        "wires": [
            [
                "dea3c268f7f52feb"
            ]
        ]
    },
    {
        "id": "c57a75bd8740f753",
        "type": "function",
        "z": "e50dde15ea72613e",
        "name": "calculate distance between 2 vechiles",
        "func": "//Credit: https://javascript.plainenglish.io/calculating-azimuth-distance-and-altitude-from-a-pair-of-gps-locations-36b4325d8ab0\n\nfunction ParseAngle(ang, limit) {\n    var angle = parseFloat(ang);\n    if (isNaN(angle) || (angle < -limit) || (angle > limit)) {\n        node.error(\"Invalid angle value.\", msg);\n        return null;\n    } else {\n        return angle;\n    }\n}\n\nfunction ParseElevation(el) {\n    var angle = parseFloat(el);\n    if (isNaN(angle)) {\n        node.error(\"Invalid elevation value.\", msg);\n        return null;\n    } else {\n        return angle;\n    }\n}\n\nfunction ParseLocation(pos) {\n    var lat = ParseAngle(pos.lat, 90.0);\n    var location = null;\n    if (lat != null) {\n        var lon = ParseAngle(pos.lon, 180.0);\n        if (lon != null) {\n            var elv = ParseElevation(pos.elv);\n            if (elv != null) {\n                location = { lat: lat, lon: lon, elv: elv };\n            }\n        }\n    }\n    return location;\n}\n\nfunction EarthRadiusInMeters(latitudeRadians) {\n    // latitudeRadians is geodetic, i.e. that reported by GPS.\n    // http://en.wikipedia.org/wiki/Earth_radius\n    var a = 6378137.0;  // equatorial radius in meters\n    var b = 6356752.3;  // polar radius in meters\n    var cos = Math.cos(latitudeRadians);\n    var sin = Math.sin(latitudeRadians);\n    var t1 = a * a * cos;\n    var t2 = b * b * sin;\n    var t3 = a * cos;\n    var t4 = b * sin;\n    return Math.sqrt((t1 * t1 + t2 * t2) / (t3 * t3 + t4 * t4));\n}\n\nfunction GeocentricLatitude(lat) {\n    // Convert geodetic latitude 'lat' to a geocentric latitude 'clat'.\n    // Geodetic latitude is the latitude as given by GPS.\n    // Geocentric latitude is the angle measured from center of Earth between a point and the equator.\n    // https://en.wikipedia.org/wiki/Latitude#Geocentric_latitude\n    var e2 = 0.00669437999014;\n    var clat = Math.atan((1.0 - e2) * Math.tan(lat));\n    return clat;\n}\n\nfunction LocationToPoint(c) {\n    // Convert (lat, lon, elv) to (x, y, z).\n    var lat = c.lat * Math.PI / 180.0;\n    var lon = c.lon * Math.PI / 180.0;\n    var radius = EarthRadiusInMeters(lat);\n    var clat = GeocentricLatitude(lat);\n\n    var cosLon = Math.cos(lon);\n    var sinLon = Math.sin(lon);\n    var cosLat = Math.cos(clat);\n    var sinLat = Math.sin(clat);\n    var x = radius * cosLon * cosLat;\n    var y = radius * sinLon * cosLat;\n    var z = radius * sinLat;\n\n    // We used geocentric latitude to calculate (x,y,z) on the Earth's ellipsoid.\n    // Now we use geodetic latitude to calculate normal vector from the surface, to correct for elevation.\n    var cosGlat = Math.cos(lat);\n    var sinGlat = Math.sin(lat);\n\n    var nx = cosGlat * cosLon;\n    var ny = cosGlat * sinLon;\n    var nz = sinGlat;\n\n    x += c.elv * nx;\n    y += c.elv * ny;\n    z += c.elv * nz;\n\n    return { x: x, y: y, z: z, radius: radius, nx: nx, ny: ny, nz: nz };\n}\n\nfunction Distance(ap, bp) {\n    var dx = ap.x - bp.x;\n    var dy = ap.y - bp.y;\n    var dz = ap.z - bp.z;\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\nfunction RotateGlobe(b, a, bradius, aradius) {\n    // Get modified coordinates of 'b' by rotating the globe so that 'a' is at lat=0, lon=0.\n    var br = { lat: b.lat, lon: (b.lon - a.lon), elv: b.elv };\n    var brp = LocationToPoint(br);\n\n    // Rotate brp cartesian coordinates around the z-axis by a.lon degrees,\n    // then around the y-axis by a.lat degrees.\n    // Though we are decreasing by a.lat degrees, as seen above the y-axis,\n    // this is a positive (counterclockwise) rotation (if B's longitude is east of A's).\n    // However, from this point of view the x-axis is pointing left.\n    // So we will look the other way making the x-axis pointing right, the z-axis\n    // pointing up, and the rotation treated as negative.\n\n    var alat = GeocentricLatitude(-a.lat * Math.PI / 180.0);\n    var acos = Math.cos(alat);\n    var asin = Math.sin(alat);\n\n    var bx = (brp.x * acos) - (brp.z * asin);\n    var by = brp.y;\n    var bz = (brp.x * asin) + (brp.z * acos);\n\n    return { x: bx, y: by, z: bz, radius: bradius };\n}\n\nfunction NormalizeVectorDiff(b, a) {\n    // Calculate norm(b-a), where norm divides a vector by its length to produce a unit vector.\n    var dx = b.x - a.x;\n    var dy = b.y - a.y;\n    var dz = b.z - a.z;\n    var dist2 = dx * dx + dy * dy + dz * dz;\n    if (dist2 == 0) {\n        return null;\n    }\n    var dist = Math.sqrt(dist2);\n    return { x: (dx / dist), y: (dy / dist), z: (dz / dist), radius: 1.0 };\n}\n\nfunction Calculate(pos1, pos2) {\n   \n    var result = {\n        from: pos1,\n        to: pos2,\n    };\n\n    var a = ParseLocation(pos1);\n    if (a != null) {\n        var b = ParseLocation(pos2);\n        if (b != null) {\n            var ap = LocationToPoint(a);\n            var bp = LocationToPoint(b);\n            var distKm = 0.001 * Distance(ap, bp);\n            result.distanceKm = distKm;\n\n            // Let's use a trick to calculate azimuth:\n            // Rotate the globe so that point A looks like latitude 0, longitude 0.\n            // We keep the actual radii calculated based on the oblate geoid,\n            // but use angles based on subtraction.\n            // Point A will be at x=radius, y=0, z=0.\n            // Vector difference B-A will have dz = N/S component, dy = E/W component.\n            var br = RotateGlobe(b, a, bp.radius, ap.radius);\n            if (br.z * br.z + br.y * br.y > 1.0e-6) {\n                var theta = Math.atan2(br.z, br.y) * 180.0 / Math.PI;\n                var azimuth = 90.0 - theta;\n                if (azimuth < 0.0) {\n                    azimuth += 360.0;\n                }\n                if (azimuth > 360.0) {\n                    azimuth -= 360.0;\n                }\n                result.azimuth = azimuth;\n            }\n\n            var bma = NormalizeVectorDiff(bp, ap);\n            if (bma != null) {\n                // Calculate altitude, which is the angle above the horizon of B as seen from A.\n                // Almost always, B will actually be below the horizon, so the altitude will be negative.\n                // The dot product of bma and norm = cos(zenith_angle), and zenith_angle = (90 deg) - altitude.\n                // So altitude = 90 - acos(dotprod).\n                var altitude = 90.0 - (180.0 / Math.PI) * Math.acos(bma.x * ap.nx + bma.y * ap.ny + bma.z * ap.nz);\n                result.altitude = altitude;\n            }\n        }\n    }\n    return result;\n}\nlet x = Calculate(msg.payload.from, msg.payload.to);\nmsg.payload=x\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 110,
        "wires": [
            [
                "f032d0ff859d38b4"
            ]
        ]
    },
    {
        "id": "b1af70e896f5010a",
        "type": "function",
        "z": "e50dde15ea72613e",
        "name": "function 38",
        "func": "global.set(\"amou\", msg.payload.amount);\nglobal.set(\"pri\", msg.payload.price);\nglobal.set(\"I\", msg.payload.ID);\nglobal.set(\"La\", msg.payload.lat);\nglobal.set(\"lo\", msg.payload.lon);\nmsg.payload={\n    \"from\": {\n        \"lat\": global.get(\"La\"),\n        \"lon\": global.get(\"lo\"),\n                \"elv\": 0\n    },\n    \"to\": {\n        \"lat\": global.get(\"lat\"),\n        \"lon\": global.get(\"lon\"),\n                \"elv\": 0\n    }\n}\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 110,
        "wires": [
            [
                "c57a75bd8740f753"
            ]
        ]
    },
    {
        "id": "f032d0ff859d38b4",
        "type": "function",
        "z": "e50dde15ea72613e",
        "name": "function 39",
        "func": "msg.payload=msg.payload.distanceKm\nglobal.set(\"d\", msg.payload.distanceKm);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 100,
        "wires": [
            [
                "5ab2bbbce39da60c",
                "0fb0c4b77c4757e2",
                "3ae2b8193e1f8f3e"
            ]
        ]
    },
    {
        "id": "39b387d11af04fe5",
        "type": "debug",
        "z": "e50dde15ea72613e",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 250,
        "y": 340,
        "wires": []
    },
    {
        "id": "b7dfd396d018c9c9",
        "type": "debug",
        "z": "e50dde15ea72613e",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 540,
        "wires": []
    },
    {
        "id": "ab634931a381e850",
        "type": "function",
        "z": "e50dde15ea72613e",
        "name": "function 41",
        "func": "msg.payload={\n    \"buyer_ID\": global.get(\"I\"),\n    \"Seller_ID\": global.get(\"My_ID\"),\n    \"lat\": global.get(\"lat\"),\n    \"lon\": global.get(\"lon\"),\n    \"speed\": global.get(\"my_speed\"),\n    \"battery\": global.get(\"my_battery\"),\n    \"amount\":global.get(\"amou\"),\n    \"price\": msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 480,
        "wires": [
            [
                "b7dfd396d018c9c9",
                "443ea32831974bf8"
            ]
        ]
    },
    {
        "id": "443ea32831974bf8",
        "type": "mqtt out",
        "z": "e50dde15ea72613e",
        "name": "",
        "topic": "/accept_request",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "594a08462165f36a",
        "x": 1020,
        "y": 620,
        "wires": []
    },
    {
        "id": "56c744f980a266f1",
        "type": "ui_text",
        "z": "e50dde15ea72613e",
        "group": "881fd84fecadb2a3",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Proposed Price",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 570,
        "y": 500,
        "wires": []
    },
    {
        "id": "0fb0c4b77c4757e2",
        "type": "function",
        "z": "e50dde15ea72613e",
        "name": "function 53",
        "func": "let amount = global.get(\"amou\");\nvar p_d =(msg.payload)* 0.05\nvar d = new Date();\nvar h = d.getHours()\nvar q =1            //factor of peak time\nvar init_pri=.25   //minimum price\nvar p_a           //initial price of amount\nvar p = 0.05     //price of 1 Kwh\n\nif(h>=12 && h<=18){\n    q=1.4\n}else{\n    q=1\n};\n\nif (amount <= 5 && amount > 0) {\n    p_a = init_pri\n} else if (amount > 5) {\n    p_a = (amount) * p\n} else {\n    msg.payload = null\n};\n\nmsg.payload=(p_a*q)+p_d\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 410,
        "wires": [
            [
                "56c744f980a266f1"
            ]
        ]
    },
    {
        "id": "3ae2b8193e1f8f3e",
        "type": "debug",
        "z": "e50dde15ea72613e",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 60,
        "wires": []
    },
    {
        "id": "375c6e37a4136db6",
        "type": "function",
        "z": "e50dde15ea72613e",
        "name": "function 57",
        "func": "if(msg.payload=='Reject'){\n    null\n}else{\nmsg.payload=Number(msg.payload)\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 330,
        "wires": [
            [
                "97bb84f2332960b9"
            ]
        ]
    },
    {
        "id": "97bb84f2332960b9",
        "type": "function",
        "z": "e50dde15ea72613e",
        "name": "function 58",
        "func": "if (typeof (msg.payload) == 'number' && msg.payload != 0){\n    return msg\n}else{\n    null\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 400,
        "wires": [
            [
                "ab634931a381e850"
            ]
        ]
    },
    {
        "id": "c7e193a2f3184b35",
        "type": "mqtt in",
        "z": "aede0575.1a92a",
        "name": "",
        "topic": "/bala7",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a8c2f38e67f15525",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1380,
        "y": 200,
        "wires": [
            [
                "95518285c820b86e"
            ]
        ]
    },
    {
        "id": "95518285c820b86e",
        "type": "debug",
        "z": "aede0575.1a92a",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 260,
        "wires": []
    },
    {
        "id": "b4a7b9e0882ffdbf",
        "type": "ui_button",
        "z": "aede0575.1a92a",
        "name": "",
        "group": "1fa043305c7b3931",
        "order": 20,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Charge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 150,
        "wires": [
            [
                "d7786af1a2d481fe"
            ]
        ]
    },
    {
        "id": "d7786af1a2d481fe",
        "type": "function",
        "z": "aede0575.1a92a",
        "name": "function 42",
        "func": "msg.payload={\n    \"Id\": global.get(\"min_id\"),\n    \"content\":'come to charge',\n    \"lat\": global.get(\"lat\"),\n    \"lon\": global.get(\"lon\"),\n    \"buyer_id\": global.get(\"My_ID\")\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 150,
        "wires": [
            [
                "4830de266d39c41f",
                "a9276105f2ae71de"
            ]
        ]
    },
    {
        "id": "4830de266d39c41f",
        "type": "mqtt out",
        "z": "aede0575.1a92a",
        "name": "",
        "topic": "/charge",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "594a08462165f36a",
        "x": 820,
        "y": 110,
        "wires": []
    },
    {
        "id": "2db7d674273418a1",
        "type": "comment",
        "z": "aede0575.1a92a",
        "name": "لما انا ابعت اقوله يجى يشحنلى",
        "info": "",
        "x": 620,
        "y": 30,
        "wires": []
    },
    {
        "id": "1164627da09f3190",
        "type": "comment",
        "z": "aede0575.1a92a",
        "name": "الرسالة هتظهرله ازاى",
        "info": "",
        "x": 630,
        "y": 220,
        "wires": []
    },
    {
        "id": "761e3c79f156a6e2",
        "type": "mqtt in",
        "z": "aede0575.1a92a",
        "name": "",
        "topic": "/charge",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "594a08462165f36a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 270,
        "wires": [
            [
                "41ca168a92e02928"
            ]
        ]
    },
    {
        "id": "41ca168a92e02928",
        "type": "function",
        "z": "aede0575.1a92a",
        "name": "function 44",
        "func": "if (msg.payload.Id == global.get(\"My_ID\")){\n   return msg\n}else{\nnull\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 270,
        "wires": [
            [
                "68fc2cb8fecd5d8f"
            ]
        ]
    },
    {
        "id": "61384bb4be06522b",
        "type": "ui_toast",
        "z": "aede0575.1a92a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Show on map",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "trade",
        "name": "",
        "x": 760,
        "y": 270,
        "wires": [
            [
                "2cc04bcb11962e55",
                "75e1bdcec75dea9f",
                "e6be2441620e6c49"
            ]
        ]
    },
    {
        "id": "68fc2cb8fecd5d8f",
        "type": "function",
        "z": "aede0575.1a92a",
        "name": "function 45",
        "func": "global.set(\"name\", msg.payload.buyer_id);\nglobal.set(\"finlat\", msg.payload.lat);\nglobal.set(\"finlon\", msg.payload.lon);\nmsg.payload=`${global.get(\"name\")} accept your help`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 270,
        "wires": [
            [
                "61384bb4be06522b"
            ]
        ]
    },
    {
        "id": "3c87f82f85875707",
        "type": "ui_worldmap",
        "z": "aede0575.1a92a",
        "group": "602a7c26d172717a",
        "order": 1,
        "width": 30,
        "height": 12,
        "name": "",
        "lat": " 31.130768",
        "lon": " 31.643557",
        "zoom": "18",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "hide",
        "layers": "hide",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "showruler": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriDG,UKOS",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 980,
        "y": 430,
        "wires": []
    },
    {
        "id": "2cc04bcb11962e55",
        "type": "function",
        "z": "aede0575.1a92a",
        "name": "minimum distance",
        "func": "msg.payload =\n{\n    \"name\": global.get(\"name\"),\n    \"lat\": global.get(\"finlat\"),\n    \"lon\": global.get(\"finlon\"),\n    \"icon\":\"car\",\n    \"iconColor\": \"black\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 420,
        "wires": [
            [
                "3c87f82f85875707"
            ]
        ]
    },
    {
        "id": "a9276105f2ae71de",
        "type": "debug",
        "z": "aede0575.1a92a",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 170,
        "wires": []
    },
    {
        "id": "76f5c682b2eb842c",
        "type": "ui_button",
        "z": "aede0575.1a92a",
        "name": "",
        "group": "881fd84fecadb2a3",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Hide map",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 580,
        "wires": [
            [
                "f1c9cf31c17794a4"
            ]
        ]
    },
    {
        "id": "f1c9cf31c17794a4",
        "type": "switch",
        "z": "aede0575.1a92a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 610,
        "wires": [
            [
                "fc49b9b847129711"
            ],
            [
                "4c26782232cb6ee8"
            ]
        ]
    },
    {
        "id": "fc49b9b847129711",
        "type": "change",
        "z": "aede0575.1a92a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"request_Map\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 600,
        "wires": [
            [
                "315903751dc939f0"
            ]
        ]
    },
    {
        "id": "4c26782232cb6ee8",
        "type": "change",
        "z": "aede0575.1a92a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"request_Map\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 640,
        "wires": [
            [
                "315903751dc939f0"
            ]
        ]
    },
    {
        "id": "315903751dc939f0",
        "type": "ui_ui_control",
        "z": "aede0575.1a92a",
        "name": "",
        "events": "all",
        "x": 860,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "75e1bdcec75dea9f",
        "type": "function",
        "z": "aede0575.1a92a",
        "name": "function 46",
        "func": "if (msg.payload == \"Show on map\"){\n    msg.payload= true\n    return msg ;\n}else{\n    null\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 450,
        "wires": [
            [
                "f1c9cf31c17794a4"
            ]
        ]
    },
    {
        "id": "e6be2441620e6c49",
        "type": "debug",
        "z": "aede0575.1a92a",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 320,
        "wires": []
    },
    {
        "id": "07da68e06f4713e5",
        "type": "comment",
        "z": "aede0575.1a92a",
        "name": "احسن وقت",
        "info": "",
        "x": 70,
        "y": 150,
        "wires": []
    },
    {
        "id": "3035deef618d69e4",
        "type": "comment",
        "z": "aede0575.1a92a",
        "name": "احسن سعر",
        "info": "",
        "x": 70,
        "y": 80,
        "wires": []
    },
    {
        "id": "7dd6ea6dbf052066",
        "type": "ui_button",
        "z": "aede0575.1a92a",
        "name": "",
        "group": "1fa043305c7b3931",
        "order": 22,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "charge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 80,
        "wires": [
            [
                "a4fbeff991620686"
            ]
        ]
    },
    {
        "id": "a4fbeff991620686",
        "type": "function",
        "z": "aede0575.1a92a",
        "name": "function 60",
        "func": "msg.payload = msg.payload = {\n    \"Id\": global.get(\"price_id\"),\n    \"content\": 'come to charge',\n    \"lat\": global.get(\"price_lat\"),\n    \"lon\": global.get(\"price_lon\"),\n    \"buyer_id\": global.get(\"My_ID\")\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 80,
        "wires": [
            [
                "4830de266d39c41f",
                "a9276105f2ae71de"
            ]
        ]
    },
    {
        "id": "91e96484109a7271",
        "type": "ui_button",
        "z": "61a63825a1bb6877",
        "name": "",
        "group": "6da53b28cefdaed3",
        "order": 5,
        "width": 7,
        "height": 1,
        "passthru": false,
        "label": "Generate wallet",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "wallet",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 530,
        "y": 150,
        "wires": [
            [
                "935f60b6e7d72c57"
            ]
        ]
    },
    {
        "id": "3b82d29aa0bde978",
        "type": "ui_button",
        "z": "61a63825a1bb6877",
        "name": "",
        "group": "6da53b28cefdaed3",
        "order": 12,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "send public key",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 520,
        "y": 230,
        "wires": [
            [
                "24934c58d2e7de51"
            ]
        ]
    },
    {
        "id": "b48051ad07729236",
        "type": "ui_text_input",
        "z": "61a63825a1bb6877",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "6da53b28cefdaed3",
        "order": 20,
        "width": 18,
        "height": 1,
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 760,
        "y": 220,
        "wires": [
            [
                "2af232cc731a41d9"
            ]
        ]
    },
    {
        "id": "ce2da0f2e228a75d",
        "type": "ui_text",
        "z": "61a63825a1bb6877",
        "group": "6da53b28cefdaed3",
        "order": 3,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "My puplic key",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 810,
        "y": 160,
        "wires": []
    },
    {
        "id": "cd1149e95cdb79ce",
        "type": "ui_text_input",
        "z": "61a63825a1bb6877",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "6da53b28cefdaed3",
        "order": 8,
        "width": 18,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 650,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "2951b07eaa6fa5a6",
        "type": "ui_text",
        "z": "61a63825a1bb6877",
        "group": "6da53b28cefdaed3",
        "order": 16,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Puplic key of buyer",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 700,
        "y": 330,
        "wires": []
    },
    {
        "id": "2a7f6ea941c8336c",
        "type": "ui_button",
        "z": "61a63825a1bb6877",
        "name": "",
        "group": "6da53b28cefdaed3",
        "order": 24,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Make transaction",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 470,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "935f60b6e7d72c57",
        "type": "trigger",
        "z": "61a63825a1bb6877",
        "name": "reset msg",
        "op1": "",
        "op2": "empty",
        "op1type": "pay",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 550,
        "y": 100,
        "wires": [
            [
                "f9441d8dc5d282c7"
            ]
        ]
    },
    {
        "id": "f9441d8dc5d282c7",
        "type": "ui_template",
        "z": "61a63825a1bb6877",
        "group": "6da53b28cefdaed3",
        "name": "window redirect",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function(scope) {\n    scope.$watch('msg.payload', function(data) {\n        if (data == \"wallet\") {\n          //window.open(\"https://www.nodered.org\");\n          window.location.href = \"http://127.0.0.1:8081/\";\n        } \n        if (data == \"GitHub\") {\n          //window.open(\"https://github.com/node-red\");\n          window.location.href = \"https://github.com/node-red\";\n        } \n    });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 750,
        "y": 100,
        "wires": [
            [
                "4e3110207e756811"
            ]
        ]
    },
    {
        "id": "4e3110207e756811",
        "type": "debug",
        "z": "61a63825a1bb6877",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 100,
        "wires": []
    },
    {
        "id": "2af232cc731a41d9",
        "type": "function",
        "z": "61a63825a1bb6877",
        "name": "puplic key of me to send",
        "func": "msg.payload=flow.set(\"mypuplic\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 220,
        "wires": [
            [
                "4e3110207e756811"
            ]
        ]
    },
    {
        "id": "24934c58d2e7de51",
        "type": "function",
        "z": "61a63825a1bb6877",
        "name": "function 61",
        "func": "msg.payload={\n   \"puplic\": flow.get(\"mypuplic\")\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 270,
        "wires": [
            [
                "2c28138caf39eafa",
                "7bb019dc392d42c6"
            ]
        ]
    },
    {
        "id": "2c28138caf39eafa",
        "type": "mqtt out",
        "z": "61a63825a1bb6877",
        "name": "",
        "topic": "/puplic",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a8c2f38e67f15525",
        "x": 890,
        "y": 280,
        "wires": []
    },
    {
        "id": "7bb019dc392d42c6",
        "type": "debug",
        "z": "61a63825a1bb6877",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 330,
        "wires": []
    },
    {
        "id": "16205a0383bd67f6",
        "type": "inject",
        "z": "ad15bb11167eaadc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 360,
        "wires": [
            [
                "610d65c51332ac78"
            ]
        ]
    },
    {
        "id": "610d65c51332ac78",
        "type": "function",
        "z": "ad15bb11167eaadc",
        "name": "function 51",
        "func": "let y=[]\nlet x=\n[{ \"seller_id\": 1000158830, \"lat\": 31.130268, \"lon\": 31.643557, \"speed\": 80, \"batterypercentage\": 90, \"arrievetime\": 0.0026619846167241787, \"chargetime\": 4.4, \"distance\": 0.21295876933793428, \"price\": 50 }, { \"seller_id\": 1000158838, \"lat\": 31.030268, \"lon\": 31.643557, \"speed\": 120, \"batterypercentage\": 90, \"arrievetime\": 0.09259951778622279, \"chargetime\": 4.4, \"distance\": 11.111942134346734, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.230268, \"lon\": 31.643557, \"speed\": 130, \"batterypercentage\": 100, \"arrievetime\": 0.08512645655293632, \"chargetime\": 4, \"distance\": 11.066439351881723, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.653557, \"speed\": 130, \"batterypercentage\": 80, \"arrievetime\": 0.005710475433357218, \"chargetime\": 4.8, \"distance\": 0.7423618063364383, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.693557, \"speed\": 150, \"batterypercentage\": 70, \"arrievetime\": 0.03038020590927683, \"chargetime\": 5.2, \"distance\": 4.557030886391525, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.683557, \"speed\": 150, \"batterypercentage\": 100, \"arrievetime\": 0.02402203501532604, \"chargetime\": 4, \"distance\": 3.603305252298906, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.673557, \"speed\": 100, \"batterypercentage\": 100, \"arrievetime\": 0.02649590497027946, \"chargetime\": 4, \"distance\": 2.6495904970279462, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.64557, \"speed\": 130, \"batterypercentage\": 100, \"arrievetime\": 0.00023222741889011053, \"chargetime\": 4, \"distance\": 0.030189564455714368, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.74557, \"speed\": 130, \"batterypercentage\": 85, \"arrievetime\": 0.07321301745019212, \"chargetime\": 4.6, \"distance\": 9.517692268524977, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.84557, \"speed\": 130, \"batterypercentage\": 95, \"arrievetime\": 0.14657752772515584, \"chargetime\": 4.2, \"distance\": 19.05507860427026, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.84557, \"speed\": 160, \"batterypercentage\": 75, \"arrievetime\": 0.11909424127668913, \"chargetime\": 5, \"distance\": 19.05507860427026, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.88557, \"speed\": 160, \"batterypercentage\": 100, \"arrievetime\": 0.14293770428349406, \"chargetime\": 4, \"distance\": 22.87003268535905, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.71557, \"speed\": 140, \"batterypercentage\": 95, \"arrievetime\": 0.047546302060366974, \"chargetime\": 4.2, \"distance\": 6.656482288451376, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.72557, \"speed\": 140, \"batterypercentage\": 85, \"arrievetime\": 0.05435870017640736, \"chargetime\": 4.6, \"distance\": 7.61021802469703, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.72657, \"speed\": 140, \"batterypercentage\": 75, \"arrievetime\": 0.05503994044365324, \"chargetime\": 5, \"distance\": 7.705591662111454, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.72757, \"speed\": 140, \"batterypercentage\": 95, \"arrievetime\": 0.05572118078080029, \"chargetime\": 4.2, \"distance\": 7.800965309312041, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130268, \"lon\": 31.72757, \"speed\": 110, \"batterypercentage\": 65, \"arrievetime\": 0.07091786644829128, \"chargetime\": 5.4, \"distance\": 7.800965309312041, \"price\": 50 }, { \"seller_id\": 1000158840, \"lat\": 31.130474, \"lon\": 31.65757, \"speed\": 110, \"batterypercentage\": 65, \"arrievetime\": 0.010224957887354152, \"chargetime\": 5.4, \"distance\": 1.1247453676089567, \"price\": 50 }]\nfor (let i = 0; i < x.length; i++) {\n    y[i]=x[i].distance \n    \n}\nmsg.payload=y\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 370,
        "wires": [
            [
                "95cc0726755dfe5c"
            ]
        ]
    },
    {
        "id": "95cc0726755dfe5c",
        "type": "debug",
        "z": "ad15bb11167eaadc",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 370,
        "wires": []
    },
    {
        "id": "c49b479295d64449",
        "type": "ui_toast",
        "z": "ad15bb11167eaadc",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Accept",
        "cancel": "Reject",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "3b2bc84b4bb8eb6c"
            ]
        ]
    },
    {
        "id": "192b784060fbe87d",
        "type": "inject",
        "z": "ad15bb11167eaadc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 100,
        "wires": [
            [
                "9f15250df1831160"
            ]
        ]
    },
    {
        "id": "edcf2f572f513ada",
        "type": "debug",
        "z": "ad15bb11167eaadc",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 140,
        "wires": []
    },
    {
        "id": "9f15250df1831160",
        "type": "function",
        "z": "ad15bb11167eaadc",
        "name": "function 54",
        "func": "msg.payload='hi'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 140,
        "wires": [
            [
                "c49b479295d64449"
            ]
        ]
    },
    {
        "id": "3b2bc84b4bb8eb6c",
        "type": "function",
        "z": "ad15bb11167eaadc",
        "name": "function 55",
        "func": "if(msg.payload=='Reject'){\n    null\n}else{\nmsg.payload=Number(msg.payload)\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 120,
        "wires": [
            [
                "6342db1c3a6bc431"
            ]
        ]
    },
    {
        "id": "6342db1c3a6bc431",
        "type": "function",
        "z": "ad15bb11167eaadc",
        "name": "function 56",
        "func": "if (typeof (msg.payload) == 'number' && msg.payload != 0){\n    return msg\n}else{\n    null\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 190,
        "wires": [
            [
                "edcf2f572f513ada"
            ]
        ]
    },
    {
        "id": "25b6280d.1ecf6",
        "type": "inject",
        "z": "d293de12a7c290a8",
        "name": "decrement",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 370,
        "wires": [
            [
                "8a41c1.6006b64"
            ]
        ]
    },
    {
        "id": "285e0e19.b9680a",
        "type": "inject",
        "z": "d293de12a7c290a8",
        "name": "increment",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 330,
        "wires": [
            [
                "ce8d952f.18666"
            ]
        ]
    },
    {
        "id": "fda0a334.bc9588",
        "type": "inject",
        "z": "d293de12a7c290a8",
        "name": "reset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 410,
        "wires": [
            [
                "17cce981.975686"
            ]
        ]
    },
    {
        "id": "ce8d952f.18666",
        "type": "function",
        "z": "d293de12a7c290a8",
        "name": "msg object",
        "func": "msg.increment = 2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 330,
        "wires": [
            [
                "ac65bf94.6e609"
            ]
        ]
    },
    {
        "id": "17cce981.975686",
        "type": "function",
        "z": "d293de12a7c290a8",
        "name": "msg object",
        "func": "msg.reset = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 410,
        "wires": [
            [
                "ac65bf94.6e609"
            ]
        ]
    },
    {
        "id": "8a41c1.6006b64",
        "type": "function",
        "z": "d293de12a7c290a8",
        "name": "msg object",
        "func": "msg.decrement = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 370,
        "wires": [
            [
                "ac65bf94.6e609"
            ]
        ]
    },
    {
        "id": "ac65bf94.6e609",
        "type": "counter",
        "z": "d293de12a7c290a8",
        "inc": "1",
        "name": "",
        "x": 770,
        "y": 350,
        "wires": [
            [
                "988afc3c.a08f98"
            ]
        ]
    },
    {
        "id": "370626a8.22216a",
        "type": "inject",
        "z": "d293de12a7c290a8",
        "name": "normal msg without control parameter",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 290,
        "wires": [
            [
                "ac65bf94.6e609"
            ]
        ]
    },
    {
        "id": "988afc3c.a08f98",
        "type": "debug",
        "z": "d293de12a7c290a8",
        "name": "message",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 930,
        "y": 350,
        "wires": []
    }
]